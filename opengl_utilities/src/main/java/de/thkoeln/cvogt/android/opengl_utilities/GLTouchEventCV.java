// This work is provided under GPLv3, the GNU General Public License 3
//   http://www.gnu.org/licenses/gpl-3.0.html

// Prof. Dr. Carsten Vogt
// Technische Hochschule Köln, Germany
// Fakultät für Informations-, Medien- und Elektrotechnik
// carsten.vogt@th-koeln.de
// 29.1.2023

package de.thkoeln.cvogt.android.opengl_utilities;

import android.view.MotionEvent;

/**
 * Class for objects that describe touch events on views of class GLSurfaceViewCV.
 * Besides the "traditional" information about the touch event, stored in an embedded MotionEvent object (x,y screen coordinate, time, ...),
 * the ray into the scene with its start point (=eye/camera position at the instant of the touch) and its direction are provided.
 * <P>
 * Objects of this class are usually generated by the onTouchEvent() method of a GLSurfaceViewCV object
 * and passed to the onTouch() methods of listeners registered with this GLSurfaceViewCV object.
 * <BR>
 * @see de.thkoeln.cvogt.android.opengl_utilities.GLSurfaceViewCV
 */

public class GLTouchEventCV {

    /**
     * The MotionEvent object passed to the surface view's onTouchEvent() method when the surface view was touched.
     */

    private final MotionEvent motionEvent;

    /**
     * The start point of the ray (i.e. the eye/camera position provided by the surface view's renderer) when the view was touched.
     */

    private final float[] rayStart;

    /**
     * The ray vector into the 3D scene calculated when the view was touched,
     * based on the (x,y) coordinates of the touch point on the display and the projection and view matrices provided by the renderer.
     */

    private final float[] rayVector;

    // HIER EVTL. ERGÄNZEN: DER BERÜHRTE SHAPE (FALLS VORHANDEN)

    /**
     * Constructor
     */

    public GLTouchEventCV(MotionEvent motionEvent, float[] rayStart, float[] rayVector) {
        this.motionEvent = motionEvent;
        this.rayStart = rayStart;
        this.rayVector = rayVector;
    }

    public MotionEvent getMotionEvent() {
        return motionEvent;
    }

    public float[] getRayStart() {
        return rayStart.clone();
    }

    public float[] getRayVector() {
        return rayVector.clone();
    }

}
